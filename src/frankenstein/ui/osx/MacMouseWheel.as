/* * Copyright © CorDeChasse 1999-2011 */package frankenstein.ui.osx {	import flash.display.InteractiveObject;	import flash.display.Stage;	import flash.events.MouseEvent;	import flash.external.ExternalInterface;	import flash.system.Capabilities;	import frankenstein.core.StageReference;	/**	 * <div class="author">	 * <p>	 * 		<b>Author </b> n.bush<br />	 * 		<b>Date </b> 14 oct 2009<br />	 * 		<b>Version </b> 1.0.0<br />	 * </p>	 * <p>	 * 		<b>Language Version </b> Actionscript 3.0<br />	 * 		<b>Runtimes Version </b> Flash Player 9<br />	 * </p>	 * </div>	 * <p>Classe qui permet de contourner le bug de la molette souris qui ne marche pas sous Mac.</p>	 * 	 * @example	 * <listing version="3.0" >	 * 	<pre class="prettyprint">	 * 		StageReference.stage = stage;	 * 			 * 		MacMouseWheel.setup();	 * 			 * 		// On écoute le mouse_wheel sur le stage	 * 		stage.addEventListener(MouseEvent.MOUSE_WHEEL, _onMouseWheel);	 * 			 * 		function _onMouseWheel(event : MouseEvent) : void {	 * 			trace("delta de la molette", event.delta);	 * 		}	 * 	</pre>	 * </listing>	 * <br />	 * <b>NB</b> : Dans l'intégration du swf dans la page HTML, il faut spécifier la propriété "name" du swf 	 * (le même que celle de l'id), exemple d'intégration avec SWFObject 2.2 :	 * @example	 * <listing version="3.0" >	 * 	<pre class="prettyprint"> 	 * 		var flashvars = {};	 * 		var params = {};	 * 		var attributes = {};	 * 		attributes.id = 'website';	 * 		attributes.name = 'website';	 * 		attributes.allowScriptAccess = 'always';	 * 		swfobject.embedSWF('MacWheelTester.swf', 'flashcontent', '550', '400', '9.0.0', '/swf/expressinstall.swf', flashvars, params, attributes); 	 * 	</pre>	 * </listing>	 * 	 */	public class MacMouseWheel {		private static var instance : MacMouseWheel;		private var _stage : Stage;		private var _currItem : InteractiveObject;		private var _clonedEvent : MouseEvent;		private var _alreadySet : Boolean;		/**		 * @private		 */		protected static function getInstance() : MacMouseWheel {			if (instance == null) instance = new MacMouseWheel(new SingletonEnforcer());			return instance;		}				/**		 * @private		 */		public function MacMouseWheel( enforcer : SingletonEnforcer ) {		}				/**		 * Initialize le MacMouseWheel		 */		public static function setup() : void {						if (MacMouseWheel.getInstance().alreadySet)				return;						var isMac : Boolean = Capabilities.os.toLowerCase().indexOf("mac") != -1;			if( isMac ) getInstance()._setup(StageReference.stage);		}				private function _setup( stage : Stage ) : void {						_callJs();									_stage = stage;			_stage.addEventListener(MouseEvent.MOUSE_MOVE, _getItemUnderCursor);						if( ExternalInterface.available ) {				ExternalInterface.addCallback('externalMouseEvent', _externalMouseEvent);				}						_alreadySet = true;		}				private function _getItemUnderCursor( e : MouseEvent ) : void {			_currItem = InteractiveObject(e.target);			_clonedEvent = MouseEvent(e);		}				private function _externalMouseEvent( delta : Number ) : void {			var wheelEvent : MouseEvent = new MouseEvent(MouseEvent.MOUSE_WHEEL, true, false, _clonedEvent.localX, _clonedEvent.localY, _clonedEvent.relatedObject, _clonedEvent.ctrlKey, _clonedEvent.altKey, _clonedEvent.shiftKey, _clonedEvent.buttonDown, int(delta));			_currItem.dispatchEvent(wheelEvent);		}				private function _callJs() : void {			var js : XML = <script>			<![CDATA[			function global(idSwf){				var swfmacmousewheel = function()				{					var u = navigator.userAgent.toLowerCase();					var p = navigator.platform.toLowerCase();					var mac = p ? /mac/.test(p) : /mac/.test(u);										if( !mac ) return null;									var regObjArr = [];										var deltaFilter = function(event)					{						var delta = 0;				        if (event.wheelDelta) {							delta = event.wheelDelta/120;							if (window.opera) delta = -delta;				        } else if (event.detail) {				            delta = -event.detail;				        }				        if (event.preventDefault) event.preventDefault();						return delta;					}										var deltaDispatcher = function(event)					{						var delta = deltaFilter(event);						var obj;						for(var i=0; i<regObjArr.length; i++ )						{							obj = regObjArr[i];							if( typeof( obj.externalMouseEvent ) == 'function' ) obj.externalMouseEvent( delta );						}					}										if (window.addEventListener) window.addEventListener('DOMMouseScroll', deltaDispatcher, false);					window.onmousewheel = document.onmousewheel = deltaDispatcher;												return {						/*						Public API						*/						registerObject:function(objectIdStr)						{							regObjArr[regObjArr.length] = objectIdStr;						}					};				}();								swfmacmousewheel.registerObject(document.getElementById(idSwf));			}			]]>			</script>;			ExternalInterface.call(js, ExternalInterface.objectID);		}		/**		 * @private		 */		protected function get alreadySet() : Boolean {			return _alreadySet;		}	}}internal class SingletonEnforcer {}